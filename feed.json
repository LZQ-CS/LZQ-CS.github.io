{
    "version": "https://jsonfeed.org/version/1",
    "title": "LZQ的博客",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/03/16/win10%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C/",
            "url": "http://example.com/2025/03/16/win10%E7%B3%BB%E7%BB%9FU%E7%9B%98%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C/",
            "title": "win10系统U盘如何制作",
            "date_published": "2025-03-16T09:31:34.000Z",
            "content_html": "<h3 id=\"win10系统镜像u盘制作方法\"><a class=\"markdownIt-Anchor\" href=\"#win10系统镜像u盘制作方法\">#</a> Win10 系统镜像 U 盘制作方法</h3>\n<p>电脑重装系统时需要用到系统镜像 U 盘，制作的方法如下：</p>\n<p>1. 到微软的搜索引擎 bing 搜索 ——win10 官方镜像下载。</p>\n<p>2. 找到这个网址 https://www.microsoft.com/zh-cn/software-download/windows10</p>\n<p>3. 确认版本点击下载。</p>\n<p>4. 系统制作工具下载好后，插上一个新买的 u 盘（确保有 8GB 以上的内存），旧 U 盘需要先格式化。</p>\n<p>5. 打开系统制作工具，选择系统版本，一般默认推荐的就行。然后，选到 U 盘，等进度条到 100% 就完成了。</p>\n",
            "tags": [
                "win10系统"
            ]
        },
        {
            "id": "http://example.com/2025/03/16/%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0CV/",
            "url": "http://example.com/2025/03/16/%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0CV/",
            "title": "开始学习CV",
            "date_published": "2025-03-16T08:45:01.000Z",
            "content_html": "<p>从 PDD 买了几本书开始学习机器视觉的相关知识，为以后的工作做准备。因为我的老板给了我一个机会😀，还是创业时期的小公司好啊！！！</p>\n<p><img data-src=\"https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACf0Nn1pKkLk0q8BJRuGlyBUojqUq4mgACCr8xGxaluVYqwylaJmtODAEAAwIAA3cAAzYE\" alt=\"IMG_3384.JPG\"></p>\n",
            "tags": [
                "opencv"
            ]
        },
        {
            "id": "http://example.com/2025/03/16/opencv%E5%85%A5%E9%97%A8%E4%BA%86%E8%A7%A3/",
            "url": "http://example.com/2025/03/16/opencv%E5%85%A5%E9%97%A8%E4%BA%86%E8%A7%A3/",
            "title": "opencv入门了解",
            "date_published": "2025-03-16T08:21:10.000Z",
            "content_html": "<h3 id=\"opencv简介\"><a class=\"markdownIt-Anchor\" href=\"#opencv简介\">#</a> Opencv 简介</h3>\n<ul>\n<li><strong>OpenCV</strong>（<strong>Open Source Computer Vision Library</strong>）是一个开源的计算机视觉和机器学习库，由英特尔于 1999 年发起并维护，现已成为全球计算机视觉领域最流行的工具之一。它的核心目标是提供一套通用的算法和工具，帮助开发者快速实现与图像、视频处理相关的功能。</li>\n</ul>\n<h3 id=\"opencv-能做什么\"><a class=\"markdownIt-Anchor\" href=\"#opencv-能做什么\">#</a> <strong>OpenCV 能做什么？</strong></h3>\n<ul>\n<li>\n<p><strong>图像处理</strong>：滤波、边缘检测、颜色空间转换、几何变换（缩放、旋转）等。</p>\n</li>\n<li>\n<p><strong>视频分析</strong>：运动检测、目标跟踪、背景分离。</p>\n</li>\n<li>\n<p><strong>特征提取与匹配</strong>：检测图像中的关键点（如角点、边缘），用于图像拼接或物体识别。</p>\n</li>\n<li>\n<p><strong>目标检测与识别</strong>：人脸、车辆、文字等物体的检测（如使用 Haar 级联、深度学习模型）。</p>\n</li>\n<li>\n<p><strong>增强现实（AR）</strong>：通过摄像头实现虚拟物体叠加到现实场景。</p>\n</li>\n<li>\n<p><strong>3D 重建</strong>：从多张 2D 图像生成 3D 模型。</p>\n</li>\n<li>\n<p><strong>机器学习</strong>：支持分类、聚类等算法（如 SVM、KNN）。</p>\n<h3 id=\"opencv-的核心模块\"><a class=\"markdownIt-Anchor\" href=\"#opencv-的核心模块\">#</a> <strong>OpenCV 的核心模块</strong></h3>\n<table>\n<thead>\n<tr>\n<th>模块名</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>core</code></td>\n<td>基础数据结构（如矩阵操作）</td>\n</tr>\n<tr>\n<td><code>imgproc</code></td>\n<td>图像处理（滤波、几何变换）</td>\n</tr>\n<tr>\n<td><code>video</code></td>\n<td>视频分析（运动估计、背景减除）</td>\n</tr>\n<tr>\n<td><code>features2d</code></td>\n<td>特征检测与匹配（SIFT、ORB）</td>\n</tr>\n<tr>\n<td><code>objdetect</code></td>\n<td>目标检测（人脸、二维码）</td>\n</tr>\n<tr>\n<td><code>ml</code></td>\n<td>机器学习算法（SVM、决策树）</td>\n</tr>\n<tr>\n<td><code>dnn</code></td>\n<td>深度学习模型部署（支持 ONNX、Torch）</td>\n</tr>\n<tr>\n<td><code>calib3d</code></td>\n<td>相机标定、3D 重建</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3 id=\"学习-opencv-的优势\"><a class=\"markdownIt-Anchor\" href=\"#学习-opencv-的优势\">#</a> <strong>学习 OpenCV 的优势</strong></h3>\n<ul>\n<li><strong>低门槛</strong>：Python + OpenCV 只需几行代码即可实现复杂功能。</li>\n<li><strong>实战价值</strong>：广泛应用于工业、科研、消费电子等领域。</li>\n<li><strong>生态完善</strong>：与 NumPy、TensorFlow、PyTorch 等库无缝集成。</li>\n</ul>\n<h3 id=\"opencv入门\"><a class=\"markdownIt-Anchor\" href=\"#opencv入门\">#</a> Opencv 入门</h3>\n<ol>\n<li>\n<p><strong>安装</strong>：Python 用户只需  <code>pip install opencv-python</code> 。</p>\n</li>\n<li>\n<p><strong>文档</strong>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm9wZW5jdi5vcmcvNC54Lw==\">OpenCV 官方文档</span></p>\n</li>\n<li>\n<p><strong>教程</strong>：从读取图像、处理像素开始，逐步实现人脸检测、目标跟踪等。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#石头剪刀布</span><br><span class=\"line\">pip install opencv-python</span><br><span class=\"line\">pip install opencv-contrib-python # 包含更多高级功能</span><br><span class=\"line\">pip install opencv-python mediapipe</span><br><span class=\"line\"></span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化MediaPipe手部模型</span><br><span class=\"line\">mp_hands = mp.solutions.hands</span><br><span class=\"line\">hands = mp_hands.Hands(</span><br><span class=\"line\">    static_image_mode=False,</span><br><span class=\"line\">    max_num_hands=1,  # 只检测一只手（简化逻辑）</span><br><span class=\"line\">    min_detection_confidence=0.7,</span><br><span class=\"line\">    min_tracking_confidence=0.5</span><br><span class=\"line\">)</span><br><span class=\"line\">mp_drawing = mp.solutions.drawing_utils</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开摄像头</span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 定义手势判断函数</span><br><span class=\"line\">def get_gesture(hand_landmarks, img_shape):</span><br><span class=\"line\">    h, w = img_shape[:2]</span><br><span class=\"line\">    tip_ids = [4, 8, 12, 16, 20]  # 指尖关键点索引（拇指到小指）</span><br><span class=\"line\">    fingers = []</span><br><span class=\"line\"></span><br><span class=\"line\">    # --- 判断拇指是否伸直（需特殊处理）---</span><br><span class=\"line\">    thumb_tip = hand_landmarks.landmark[tip_ids[0]]  # 拇指指尖</span><br><span class=\"line\">    thumb_mcp = hand_landmarks.landmark[2]  # 拇指根部关节</span><br><span class=\"line\"></span><br><span class=\"line\">    # 横向手势：拇指指尖x坐标超过根部关节则为伸直</span><br><span class=\"line\">    if thumb_tip.x &gt; thumb_mcp.x:</span><br><span class=\"line\">        fingers.append(1)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        fingers.append(0)</span><br><span class=\"line\"></span><br><span class=\"line\">    # --- 判断其他四指是否伸直 ---</span><br><span class=\"line\">    for id in range(1, 5):</span><br><span class=\"line\">        tip = hand_landmarks.landmark[tip_ids[id]]  # 指尖</span><br><span class=\"line\">        dip = hand_landmarks.landmark[tip_ids[id] - 1]  # 第二指节</span><br><span class=\"line\"></span><br><span class=\"line\">        # 指尖的y坐标 &lt; 第二指节的y坐标 → 手指伸直</span><br><span class=\"line\">        if tip.y &lt; dip.y:</span><br><span class=\"line\">            fingers.append(1)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            fingers.append(0)</span><br><span class=\"line\"></span><br><span class=\"line\">    # --- 根据伸直手指数量判断手势 ---</span><br><span class=\"line\">    total_fingers = sum(fingers)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 手势逻辑规则</span><br><span class=\"line\">    if total_fingers == 0:</span><br><span class=\"line\">        return &quot;Rock&quot;</span><br><span class=\"line\">    elif total_fingers == 5:</span><br><span class=\"line\">        return &quot;Paper&quot;</span><br><span class=\"line\">    elif fingers[1] == 1 and fingers[2] == 1 and total_fingers == 2:</span><br><span class=\"line\">        return &quot;Scissors&quot;</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        return &quot;Unknown&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 主循环</span><br><span class=\"line\">while cap.isOpened():</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\">    # 处理图像</span><br><span class=\"line\">    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)</span><br><span class=\"line\">    results = hands.process(rgb_frame)</span><br><span class=\"line\"></span><br><span class=\"line\">    if results.multi_hand_landmarks:</span><br><span class=\"line\">        for hand_landmarks in results.multi_hand_landmarks:</span><br><span class=\"line\">            # 绘制关键点</span><br><span class=\"line\">            mp_drawing.draw_landmarks(</span><br><span class=\"line\">                frame, hand_landmarks, mp_hands.HAND_CONNECTIONS,</span><br><span class=\"line\">                mp_drawing.DrawingSpec(color=(0, 255, 0), thickness=2),</span><br><span class=\"line\">                mp_drawing.DrawingSpec(color=(0, 0, 255), thickness=2)</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">            # 计算边界框</span><br><span class=\"line\">            x_coords = [int(lm.x * frame.shape[1]) for lm in hand_landmarks.landmark]</span><br><span class=\"line\">            y_coords = [int(lm.y * frame.shape[0]) for lm in hand_landmarks.landmark]</span><br><span class=\"line\">            x_min, x_max = max(0, min(x_coords)), min(frame.shape[1], max(x_coords))</span><br><span class=\"line\">            y_min, y_max = max(0, min(y_coords)), min(frame.shape[0], max(y_coords))</span><br><span class=\"line\"></span><br><span class=\"line\">            # 识别手势</span><br><span class=\"line\">            gesture = get_gesture(hand_landmarks, frame.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 绘制结果</span><br><span class=\"line\">            cv2.rectangle(frame, (x_min, y_min), (x_max, y_max), (0, 255, 0), 2)</span><br><span class=\"line\">            cv2.putText(frame, gesture, (x_min, y_min - 10),</span><br><span class=\"line\">                        cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 显示画面</span><br><span class=\"line\">    cv2.imshow(&#x27;Rock Paper Scissors&#x27;, frame)</span><br><span class=\"line\">    if cv2.waitKey(1) == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n",
            "tags": [
                "opencv"
            ]
        },
        {
            "id": "http://example.com/2025/03/16/%E6%97%A5%E8%AF%AD%E5%85%A5%E9%97%A8%E5%BF%85%E4%BC%9A50%E9%9F%B3/",
            "url": "http://example.com/2025/03/16/%E6%97%A5%E8%AF%AD%E5%85%A5%E9%97%A8%E5%BF%85%E4%BC%9A50%E9%9F%B3/",
            "title": "日语入门必会50音",
            "date_published": "2025-03-16T07:44:59.000Z",
            "content_html": "<h3 id=\"50音的平假名和片假名\"><a class=\"markdownIt-Anchor\" href=\"#50音的平假名和片假名\">#</a> 50 音的平假名和片假名</h3>\n<p>上为平假名，下为片假名。</p>\n<p>平假名是组成日语单词和句子的主要成分，片假名大多数是用来组成外来语（主要是音译英语单词，也有中文等其他国家语言）。日本人英语不好的话，对片假名其实也不认识（指日本老人。日本年轻人还是比较喜欢用片假名的）。</p>\n<h3 id=\"日语50音\"><a class=\"markdownIt-Anchor\" href=\"#日语50音\">#</a> 日语 50 音</h3>\n<p>あ　い　う　え　お</p>\n<p>ア　イ　ウ　エ　オ</p>\n<p>か　き　く　け　こ</p>\n<p>カ　キ　ク　ケ　コ</p>\n<p>さ　し　す　せ　そ</p>\n<p>サ　シ　ス　セ　ソ</p>\n<p>た　ち　つ　て　と</p>\n<p>タ　チ　ツ　テ　ト</p>\n<p>な　に　ぬ　ね　の</p>\n<p>ナ　ニ　ヌ　ネ　ノ</p>\n<p>は　ひ　ふ　へ　ほ</p>\n<p>ハ　ヒ　フ　ヘ　ホ</p>\n<p>ま　み　む　め　も</p>\n<p>マ　ミ　ム　メ　モ</p>\n<p>ら　り　る　れ　ろ</p>\n<p>ラ　リ　ル　レ　ロ</p>\n<p>や　ゆ　よ</p>\n<p>ヤ　ユ　ヨ</p>\n<p>わ　を　ん</p>\n<p>ワ　ヲ　ン</p>\n",
            "tags": [
                "日语"
            ]
        },
        {
            "id": "http://example.com/2025/03/16/%E7%94%A8HEXO%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/",
            "url": "http://example.com/2025/03/16/%E7%94%A8HEXO%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/",
            "title": "用HEXO框架搭建了一个博客",
            "date_published": "2025-03-16T05:59:10.000Z",
            "content_html": "<h3 id=\"hexo博客\"><a class=\"markdownIt-Anchor\" href=\"#hexo博客\">#</a> HEXO 博客</h3>\n<p>今天用 HEXO 框架搭建了一个自己的博客</p>\n<p>后续准备买个轻量级云服务托管这个博客，毕竟 GitHub 托管访问太慢了 Q_Q</p>\n<p>顺便用图床分享一张喜欢的壁纸：</p>\n<img data-src=\"https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACfs9n1DkxpwHyjL5Yqpap-9uxJMr7VAACbcMxG4CMqFarLm833njj4QEAAwIAA3cAAzYE\" alt=\"final-fantasy-15-lq.jpg\">\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}